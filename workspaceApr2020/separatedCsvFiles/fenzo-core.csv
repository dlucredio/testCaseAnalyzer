mainProjectName,projectName,filePath,typeName,methodName,methodShortSignature,methodVerboseSignature,methodAnnotations,numberOfFirstLevelStatements,numberOfStatements,numberOfMethodInvocations,distinctMethodInvocations,numberOfDistinctMethodInvocations,distinctMethodInvocationsInSameClass,numberOfDistinctMethodInvocationsInSameClass,distinctTestCaseMethodInvocationsInSameClass,numberOfDistinctTestCaseMethodInvocationsInSameClass,numberOfMethodInvocationsWithExceptions,numberOfExceptionsThrown,numberOfExceptionsThrownAndCaughtExact,numberOfExceptionsThrownAndCaughtPartial,exceptionsThrownInMethodInvocations,numberOfAssertions,numberOfAssertionsWithRecursion,distinctMethodsInSameClassThatCallThisOne,numberOfdistinctMethodsInSameClassThatCallThisOne,distinctTestCasesInSameClassThatCallThisOne,numberOfdistinctTestCasesInSameClassThatCallThisOne
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testOneTaskAssignment,()V,void testOneTaskAssignment(),org.junit.Test,1,1,3,QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|void testOneTaskInternal(QueuableTask queuableTask; Action0 action),3,void testOneTaskInternal(QueuableTask queuableTask; Action0 action),1,,0,1,1,0,0,java.lang.Exception,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testOneTaskWithResourceSet,()V,void testOneTaskWithResourceSet(),org.junit.Test,3,9,15,AssignedResources getAssignedResources()|List<PreferentialNamedConsumableResourceSet.ConsumeResult> getConsumedNamedResources()|Map singletonMap(Object key; Object value)|Object get(int index)|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|String getResName()|String getResValue()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void assertNotNull(Object object)|void testOneTaskInternal(QueuableTask queuableTask; Action0 action),13,void testOneTaskInternal(QueuableTask queuableTask; Action0 action),1,,0,1,1,0,0,java.lang.Exception,4,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testMultipleTaskAssignments,()V,void testMultipleTaskAssignments(),org.junit.Test,13,26,41,Collection values()|Iterator iterator()|List singletonList(Object o)|List<Exception> getExceptions()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get()|Object get(int index)|Object next()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set<TaskAssignmentResult> getTasksAssigned()|String getMessage()|String toString()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback)|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|boolean await(long timeout; TimeUnit unit)|boolean isEmpty()|int size()|long getCount()|void addLeases(List<? extends VirtualMachineLease> leases)|void countDown()|void fail(String message)|void queueTask(QueuableTask task)|void set(Object newValue)|void sleep(long millis)|void start(),30,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback),2,,0,2,2,0,0,java.lang.InterruptedException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testOrderedAssignments,()V,void testOrderedAssignments(),org.junit.Test,32,48,67,Collection values()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object poll(long timeout; TimeUnit unit)|QAttributes getQAttributes()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set<TaskAssignmentResult> getTasksAssigned()|String getBucketName()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback)|boolean isEmpty()|boolean offer(Object e)|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(Object expected; Object actual)|void fail(String message)|void queueTask(QueuableTask task)|void start(),20,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback),2,,0,5,5,0,0,java.lang.InterruptedException,9,9,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testMultiTierAllocation,()V,void testMultiTierAllocation(),org.junit.Test,25,41,51,Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object get()|Object get(Object key)|Object next()|Object poll(long timeout; TimeUnit unit)|QAttributes getQAttributes()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set<TaskAssignmentResult> getTasksAssigned()|String getBucketName()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback)|boolean await(long timeout; TimeUnit unit)|boolean isEmpty()|boolean offer(Object e)|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(Object expected; Object actual)|void assertNotNull(Object object)|void assertNotNull(String message; Object object)|void countDown()|void fail(String message)|void queueTask(QueuableTask task)|void requestAllTasks(Action1<Map<TaskQueue.TaskState;Collection<QueuableTask>>> action)|void set(Object newValue)|void start(),30,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback),2,,0,4,4,0,0,com.netflix.fenzo.queues.TaskQueueException|java.lang.InterruptedException,7,7,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testMultiResAllocation,()V,void testMultiResAllocation(),org.junit.Test,30,53,66,Collection values()|List singletonList(Object o)|List<VirtualMachineLease> getLeases(int hostSuffixBegin; int numHosts; double cpus; double memory; int portBeg; int portEnd)|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object get()|Object get(Object key)|Object poll(long timeout; TimeUnit unit)|QAttributes getQAttributes()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set<TaskAssignmentResult> getTasksAssigned()|String getBucketName()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback)|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|boolean await(long timeout; TimeUnit unit)|boolean isEmpty()|boolean offer(Object e)|boolean unqueueTaskResults(int numTasks; BlockingQueue<QueuableTask> assignmentResults)|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(Object expected; Object actual)|void assertNotNull(Object object)|void countDown()|void fail(String message)|void queueTask(QueuableTask task)|void requestAllTasks(Action1<Map<TaskQueue.TaskState;Collection<QueuableTask>>> action)|void set(Object newValue)|void start(),31,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback)|boolean unqueueTaskResults(int numTasks; BlockingQueue<QueuableTask> assignmentResults),3,,0,6,6,0,0,com.netflix.fenzo.queues.TaskQueueException|java.lang.InterruptedException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testRemoveFromQueue,()V,void testRemoveFromQueue(),org.junit.Test,23,39,44,Collection<TaskRequest> getRunningTasks()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|QAttributes getQAttributes()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|String getId()|String hostname()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback)|boolean await(long timeout; TimeUnit unit)|boolean equals(Object anObject)|boolean get()|int size()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertFalse(String message; boolean condition)|void assertTrue(String message; boolean condition)|void countDown()|void fail(String message)|void queueTask(QueuableTask task)|void removeTask(String taskId; QAttributes qAttributes; String hostname)|void requestVmCurrentStates(Action1<List<VirtualMachineCurrentState>> action)|void set(boolean newValue)|void shutdown()|void start(),27,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback),2,,0,5,5,0,0,com.netflix.fenzo.queues.TaskQueueException|java.lang.InterruptedException,5,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testMaxSchedIterDelay,()V,void testMaxSchedIterDelay(),org.junit.Test,27,30,31,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback)|boolean await(long timeout; TimeUnit unit)|long currentTimeMillis()|long get()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertTrue(String message; boolean condition)|void fail(String message)|void queueTask(QueuableTask task)|void setupTaskGetter(TaskSchedulingService schedulingService; AtomicLong gotTasksAt; CountDownLatch latch)|void sleep(long millis)|void start(),16,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback)|void setupTaskGetter(TaskSchedulingService schedulingService; AtomicLong gotTasksAt; CountDownLatch latch),3,,0,7,7,0,0,com.netflix.fenzo.queues.TaskQueueException|java.lang.InterruptedException,6,6,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testInitWithPrevRunningTasks,()V,void testInitWithPrevRunningTasks(),org.junit.Test,14,19,18,Iterator iterator()|Object get()|Object next()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|String getHostname()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback)|boolean await(long timeout; TimeUnit unit)|boolean isEmpty()|void assertEquals(Object expected; Object actual)|void countDown()|void fail(String message)|void initializeRunningTask(QueuableTask task; String hostname)|void requestVmCurrentStates(Action1<List<VirtualMachineCurrentState>> action)|void set(Object newValue)|void start(),18,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback),2,,0,2,2,0,0,com.netflix.fenzo.queues.TaskQueueException|java.lang.InterruptedException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testLargeTasksToInitInRunningState,()V,void testLargeTasksToInitInRunningState(),org.junit.Test,23,46,57,Collection values()|Iterator iterator()|List<Exception> getExceptions()|List<Task> getSampleTasksInRunningState()|List<VirtualMachineLease> getLeases(int hostSuffixBegin; int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get()|Object getKey()|Object getValue()|Object next()|Object put(Object key; Object value)|QueuableTask toQueuableTask(Task t)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|String getBucket()|String getHost()|String getId()|String toString()|TaskQueue createTieredQueue(int numTiers)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback)|boolean await(long timeout; TimeUnit unit)|boolean containsKey(Object key)|boolean get()|boolean isEmpty()|double getCpu()|double getDisk()|double getMemory()|double getNetworkMbps()|int getTier()|int size()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertNull(Object object)|void countDown()|void fail(String message)|void initializeRunningTask(QueuableTask task; String hostname)|void printStackTrace()|void println(String x)|void queueTask(QueuableTask task)|void set(Object newValue)|void set(boolean newValue)|void sleep(long millis)|void start(),44,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback),2,,0,3,3,0,0,java.io.IOException|java.lang.InterruptedException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testNotReadyTask,()V,void testNotReadyTask(),org.junit.Test,22,31,45,Iterator iterator()|List<Exception> getExceptions()|List<VirtualMachineLease> getLeases(int hostSuffixBegin; int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get()|Object next()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set<TaskAssignmentResult> getTasksAssigned()|String getId()|String getTaskId()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback)|boolean add(Object e)|boolean await(long timeout; TimeUnit unit)|boolean isEmpty()|int size()|long currentTimeMillis()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void countDown()|void fail(String message)|void forEach(BiConsumer action)|void forEach(Consumer action)|void queueTask(QueuableTask task)|void safeSetReadyAt(long when)|void set(Object newValue)|void shutdown()|void start(),32,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; long maxDelayMillis; Action1<SchedulingResult> resultCallback),2,,0,1,1,0,0,java.lang.InterruptedException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/TaskSchedulingServiceTest.java,com.netflix.fenzo.TaskSchedulingServiceTest,testAssignableVMsEvaluator,()V,void testAssignableVMsEvaluator(),org.junit.Test,14,18,20,Collector toList()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object collect(Collector collector)|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Stream limit(long maxSize)|Stream stream()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Func1<List<AssignableVirtualMachine>;List<AssignableVirtualMachine>> assignableVMsEvaluator)|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback)|boolean await(long timeout; TimeUnit unit)|int getTotalVMsCount()|int size()|void addLeases(List<? extends VirtualMachineLease> leases)|void countDown()|void fail(String message)|void queueTask(QueuableTask task)|void set(Object newValue)|void start(),20,TaskScheduler getScheduler(Func1<List<AssignableVirtualMachine>;List<AssignableVirtualMachine>> assignableVMsEvaluator)|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; long loopMillis; Action1<SchedulingResult> resultCallback),2,,0,1,1,0,0,java.lang.InterruptedException,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testScheduler1,()V,void testScheduler1(),org.junit.Test,12,12,36,Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|List<VirtualMachineLease> getLeasesUsed()|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set keySet()|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String hostname()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual),18,,0,,0,1,1,0,0,java.lang.IllegalStateException,5,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testInsufficientCPUs,()V,void testInsufficientCPUs(),org.junit.Test,5,5,8,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),8,,0,,0,1,1,0,0,java.lang.IllegalStateException,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testInsufficientCPUs2,()V,void testInsufficientCPUs2(),org.junit.Test,8,8,18,Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),12,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testInsufficientMemory,()V,void testInsufficientMemory(),org.junit.Test,8,8,18,Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),12,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testInsufficientNetworkMbps,()V,void testInsufficientNetworkMbps(),org.junit.Test,9,9,19,Collection values()|Iterator iterator()|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; double network; int ports)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double network; List<VirtualMachineLease.Range> portRanges)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),12,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testInsufficientPorts,()V,void testInsufficientPorts(),org.junit.Test,8,8,18,Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),12,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testPortsUsedAcrossRanges,()V,void testPortsUsedAcrossRanges(),org.junit.Test,16,16,33,Collection values()|Iterator iterator()|List<Integer> getAssignedPorts()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; List<VirtualMachineLease.Range> ports)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|boolean atLeastOneInRange(List<Integer> check; int beg; int end)|int getBeg()|int getEnd()|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual),17,boolean atLeastOneInRange(List<Integer> check; int beg; int end),1,,0,1,1,0,0,java.lang.IllegalStateException,5,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testRepeatedPortsUsage,()V,void testRepeatedPortsUsage(),org.junit.Test,10,18,26,Collection values()|Iterator iterator()|List<Integer> getAssignedPorts()|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getConsumedLease(VirtualMachineLease orig; double consumedCpu; double consumedMemory; List<Integer> consumedPorts)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void clear(),15,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testMultiportJob,()V,void testMultiportJob(),org.junit.Test,10,13,16,Collection values()|Iterator iterator()|List<Integer> getAssignedPorts()|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void println(int x),13,,0,,0,1,1,0,0,java.lang.IllegalStateException,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testMultiportJob2,()V,void testMultiportJob2(),org.junit.Test,17,23,33,Collection values()|Iterator iterator()|List<Integer> getAssignedPorts()|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void clear()|void println(int x),15,,0,,0,2,2,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testPortAllocation,()V,void testPortAllocation(),org.junit.Test,19,19,39,Collection values()|Iterator iterator()|List<Integer> getAssignedPorts()|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void assertTrue(boolean condition)|void clear(),15,,0,,0,2,2,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testMultipleOffersOnOneHost,()V,void testMultipleOffersOnOneHost(),org.junit.Test,13,14,17,Collection values()|Iterator iterator()|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),12,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testMultipleHostsAndTasks,()V,void testMultipleHostsAndTasks(),org.junit.Test,9,11,15,Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|boolean hasNext()|int size()|void assertEquals(long expected; long actual),13,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testOfferReuse,()V,void testOfferReuse(),org.junit.Test,10,10,17,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void clear(),9,,0,,0,2,2,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testOfferExpiry,()V,void testOfferExpiry(),org.junit.Test,14,3,3,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),3,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testOfferExpiryOnSeveralVms,()V,void testOfferExpiryOnSeveralVms(),org.junit.Test,15,3,3,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),3,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testTaskTrackerState1,()V,void testTaskTrackerState1(),org.junit.Test,23,3,4,Builder withFitnessCalculator(VMTaskFitnessCalculator fitnessCalculator)|Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testVmCleanupAtBeginning,()V,void testVmCleanupAtBeginning(),org.junit.Test,17,3,6,Builder withFitnessCalculator(VMTaskFitnessCalculator fitnessCalculator)|Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e),6,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testASGsOfTwoTypes,()V,void testASGsOfTwoTypes(),org.junit.Test,25,1,4,Builder withFitnessCalculator(VMTaskFitnessCalculator fitnessCalculator)|Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testInsufficientDisk,()V,void testInsufficientDisk(),org.junit.Test,8,8,20,Collection values()|Iterator iterator()|List singletonList(Object o)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),13,,0,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testOffersListInConstraintPlugin,()V,void testOffersListInConstraintPlugin(),org.junit.Test,21,1,3,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),3,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BasicSchedulerTests.java,com.netflix.fenzo.BasicSchedulerTests,testTaskBatchSize,()V,void testTaskBatchSize(),org.junit.Test,17,17,39,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|Builder withTaskBatchSizeSupplier(Supplier<Long> taskBatchSizeSupplier)|Collection values()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String hostname()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler build()|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void println(String x),17,,0,,0,3,3,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ShortfallAutoscalerTest.java,com.netflix.fenzo.ShortfallAutoscalerTest,testShortfallScaleUp1group,()V,void testShortfallScaleUp1group(),org.junit.Test,1,1,1,void testShortfallScaleUp1group(boolean useActiveVms),1,void testShortfallScaleUp1group(boolean useActiveVms),1,,0,1,1,0,0,java.lang.Exception,0,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ShortfallAutoscalerTest.java,com.netflix.fenzo.ShortfallAutoscalerTest,testShortfallScaleUp1groupWithActiveVms,()V,void testShortfallScaleUp1groupWithActiveVms(),org.junit.Test,1,1,1,void testShortfallScaleUp1group(boolean useActiveVms),1,void testShortfallScaleUp1group(boolean useActiveVms),1,,0,1,1,0,0,java.lang.Exception,0,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ShortfallAutoscalerTest.java,com.netflix.fenzo.ShortfallAutoscalerTest,testShortfallScaleup2groups,()V,void testShortfallScaleup2groups(),org.junit.Test,25,51,59,AutoScaleRule createWithMaxSize(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall; int maxSize)|List<Exception> getExceptions()|Map singletonMap(Object key; Object value)|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object getKey()|Object getValue()|Object poll(long timeout; TimeUnit unit)|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set entrySet()|String getRuleName()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectAction; Action1<AutoScaleAction> callback; long delayScaleUpBySecs; long delayScaleDownByDecs; AutoScaleRule[] rules)|TaskSchedulingService getSchedulingService(TaskQueue queue; Action0 preHook; TaskScheduler scheduler; Action1<SchedulingResult> resultCallback)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|boolean add(Object e)|boolean isEmpty()|boolean offer(Object e)|int getMaxSize()|int getNumTasksAssigned(SchedulingResult result)|int getScaleUpCount()|int intValue()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(long expected; long actual)|void assertNotNull(Object object)|void fail(String message)|void printFailures(Map<TaskRequest;List<TaskAssignmentResult>> failures)|void printStackTrace()|void queueTask(QueuableTask task)|void shutdown()|void start(),31,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectAction; Action1<AutoScaleAction> callback; long delayScaleUpBySecs; long delayScaleDownByDecs; AutoScaleRule[] rules)|TaskSchedulingService getSchedulingService(TaskQueue queue; Action0 preHook; TaskScheduler scheduler; Action1<SchedulingResult> resultCallback)|int getNumTasksAssigned(SchedulingResult result)|void printFailures(Map<TaskRequest;List<TaskAssignmentResult>> failures),4,,0,2,2,0,0,java.lang.InterruptedException,7,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScalarResourceTests.java,com.netflix.fenzo.ScalarResourceTests,testScalar1,()V,void testScalar1(),org.junit.Test,9,9,25,Collection values()|Iterator iterator()|List singletonList(Object o)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object next()|Object put(Object key; Object value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getId()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets; Map<String;Double> scalarRequests)|TaskScheduler getScheduler()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual),17,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScalarResourceTests.java,com.netflix.fenzo.ScalarResourceTests,testInsufficientScalarResources,()V,void testInsufficientScalarResources(),org.junit.Test,9,9,32,Collection values()|Iterator iterator()|List singletonList(Object o)|List<AssignmentFailure> getFailures()|Map singletonMap(Object key; Object value)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets; Map<String;Double> scalarRequests)|TaskScheduler getScheduler()|VMResource getResource()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void println(Object x),18,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScalarResourceTests.java,com.netflix.fenzo.ScalarResourceTests,testMultipleTasksScalarRequests,()V,void testMultipleTasksScalarRequests(),org.junit.Test,10,11,31,Collection values()|Iterator iterator()|List singletonList(Object o)|List<AssignmentFailure> getFailures()|Map singletonMap(Object key; Object value)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets; Map<String;Double> scalarRequests)|TaskScheduler getScheduler()|VMResource getResource()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual),19,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScalarResourceTests.java,com.netflix.fenzo.ScalarResourceTests,testScalarRequestsAcrossHosts,()V,void testScalarRequestsAcrossHosts(),org.junit.Test,12,14,24,Collection values()|List asList(Object[] a)|List singletonList(Object o)|Map singletonMap(Object key; Object value)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets; Map<String;Double> scalarRequests)|TaskScheduler getScheduler()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),14,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScalarResourceTests.java,com.netflix.fenzo.ScalarResourceTests,testMultipleScalarResources,()V,void testMultipleScalarResources(),org.junit.Test,19,21,24,Collection values()|List asList(Object[] a)|List singletonList(Object o)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object put(Object key; Object value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets; Map<String;Double> scalarRequests)|TaskScheduler getScheduler()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual),14,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/SingleOfferModelTests.java,com.netflix.fenzo.SingleOfferModelTests,testSingleOfferMultipleIterations,()V,void testSingleOfferMultipleIterations(),org.junit.Test,19,21,46,Action2<TaskRequest;String> getTaskAssigner()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object getKey()|Object getValue()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set keySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void call(T1 t1; T2 t2)|void clear(),19,,0,,0,5,5,0,0,java.lang.IllegalStateException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/SingleOfferModelTests.java,com.netflix.fenzo.SingleOfferModelTests,testWithInitialJobsAlreadyOnHost,()V,void testWithInitialJobsAlreadyOnHost(),org.junit.Test,17,19,39,Action2<TaskRequest;String> getTaskAssigner()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object getKey()|Object getValue()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|String hostname()|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void call(T1 t1; T2 t2)|void clear(),19,,0,,0,5,5,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/SingleOfferModelTests.java,com.netflix.fenzo.SingleOfferModelTests,testMultipleOffers,()V,void testMultipleOffers(),org.junit.Test,7,8,15,List emptyList()|List singletonList(Object o)|List<VirtualMachineLease> getLeasesUsed()|Map<String;VMAssignmentResult> getResultMap()|Object getValue()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|int size()|void assertEquals(long expected; long actual),11,,0,,0,2,2,0,0,java.lang.IllegalStateException,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testHardConstraint1,()V,void testHardConstraint1(),org.junit.Test,8,3,0,,0,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testHardConstraint2,()V,void testHardConstraint2(),org.junit.Test,7,5,3,Set<String> getZonesUsed(Map<String;TaskRequest> taskMap; Map<String;Set<String>> taskToCoTasksMap; ConstraintEvaluator hardConstraint; VMTaskFitnessCalculator softConstraint)|int size()|void assertEquals(String message; long expected; long actual),3,Set<String> getZonesUsed(Map<String;TaskRequest> taskMap; Map<String;Set<String>> taskToCoTasksMap; ConstraintEvaluator hardConstraint; VMTaskFitnessCalculator softConstraint),1,,0,0,0,0,0,,1,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testSoftConstraint1,()V,void testSoftConstraint1(),org.junit.Test,5,3,0,,0,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testSoftConstraint2,()V,void testSoftConstraint2(),org.junit.Test,14,3,0,,0,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testBalancedHostAttrSoftConstraint,()V,void testBalancedHostAttrSoftConstraint(),org.junit.Test,11,3,0,,0,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testBalancedHostAttrHardConstraint,()V,void testBalancedHostAttrHardConstraint(),org.junit.Test,11,3,0,,0,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testUniqueHostConstraint,()V,void testUniqueHostConstraint(),org.junit.Test,19,2,0,,0,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testExclusiveHostConstraint,()V,void testExclusiveHostConstraint(),org.junit.Test,21,26,55,Collection values()|Iterator iterator()|List asList(Object[] a)|List<Integer> getAssignedPorts()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|List<VirtualMachineLease> getLeasesUsed()|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String getId()|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskRequest getTaskRequest(double cpus; double memory; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints)|TaskScheduler getTaskScheduler()|VirtualMachineLease getConsumedLease(VirtualMachineLease orig; double consumedCpu; double consumedMemory; List<Integer> consumedPorts)|boolean add(Object e)|boolean equals(Object anObject)|double getCPUs()|double getMemory()|int size()|void assertEquals(String message; Object expected; Object actual)|void assertEquals(long expected; long actual)|void assertFalse(boolean condition)|void assertNotNull(Object object)|void clear(),28,TaskScheduler getTaskScheduler(),1,,0,2,2,0,0,java.lang.IllegalStateException,7,7,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testExclusiveHostOnExistingTask,()V,void testExclusiveHostOnExistingTask(),org.junit.Test,22,22,41,Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List asList(Object[] a)|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|String getHostname()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskRequest getTaskRequest(double cpus; double memory; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints)|TaskScheduler getTaskScheduler()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(String message; long expected; long actual)|void assertEquals(long expected; long actual)|void assertNotNull(Object object)|void call(T1 t1; T2 t2)|void clear(),22,TaskScheduler getTaskScheduler(),1,,0,4,4,0,0,java.lang.IllegalStateException,7,7,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testHostAttrValueConstraint,()V,void testHostAttrValueConstraint(),org.junit.Test,26,17,29,Collection values()|Iterator iterator()|List asList(Object[] a)|List<VirtualMachineLease> getLeasesUsed()|List<VirtualMachineLease> getThreeVMs()|Map<String;Protos.Attribute> getAttributeMap()|Map<String;VMAssignmentResult> getResultMap()|Object get(Object key)|Object next()|Protos.Value.Text getText()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|String getValue()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getTaskScheduler()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|boolean add(Object e)|boolean equals(Object anObject)|int size()|void assertEquals(long expected; long actual)|void assertNotNull(Object object),20,List<VirtualMachineLease> getThreeVMs()|TaskScheduler getTaskScheduler(),2,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testHostnameValueConstraint,()V,void testHostnameValueConstraint(),org.junit.Test,13,4,3,List<VirtualMachineLease> getThreeVMs()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e),3,List<VirtualMachineLease> getThreeVMs(),1,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ConstraintsTests.java,com.netflix.fenzo.ConstraintsTests,testExceptionInConstraints,()V,void testExceptionInConstraints(),org.junit.Test,8,4,3,List<VirtualMachineLease> getThreeVMs()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(Object e),3,List<VirtualMachineLease> getThreeVMs(),1,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/OfferRejectionsTest.java,com.netflix.fenzo.OfferRejectionsTest,testOffersAreRejected,()V,void testOffersAreRejected(),org.junit.Test,8,5,1,TaskScheduler getScheduler(long offerExpirySecs; long leaseReOfferDelaySecs; int maxOffersToReject; BlockingQueue<VirtualMachineLease> offersQ; Func1<String;VirtualMachineLease> offerGenerator),1,TaskScheduler getScheduler(long offerExpirySecs; long leaseReOfferDelaySecs; int maxOffersToReject; BlockingQueue<VirtualMachineLease> offersQ; Func1<String;VirtualMachineLease> offerGenerator),1,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/OfferRejectionsTest.java,com.netflix.fenzo.OfferRejectionsTest,testOffersRejectLimit,()V,void testOffersRejectLimit(),org.junit.Test,10,7,1,TaskScheduler getScheduler(long offerExpirySecs; long leaseReOfferDelaySecs; int maxOffersToReject; BlockingQueue<VirtualMachineLease> offersQ; Func1<String;VirtualMachineLease> offerGenerator),1,TaskScheduler getScheduler(long offerExpirySecs; long leaseReOfferDelaySecs; int maxOffersToReject; BlockingQueue<VirtualMachineLease> offersQ; Func1<String;VirtualMachineLease> offerGenerator),1,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/OfferRejectionsTest.java,com.netflix.fenzo.OfferRejectionsTest,testPartialOfferReject,()V,void testPartialOfferReject(),org.junit.Test,19,6,4,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|Builder withMaxOffersToReject(int maxOffersToReject)|TaskScheduler build(),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/OfferRejectionsTest.java,com.netflix.fenzo.OfferRejectionsTest,testExpiryOfLease,()V,void testExpiryOfLease(),org.junit.Test,10,2,3,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),3,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/OfferRejectionsTest.java,com.netflix.fenzo.OfferRejectionsTest,testTimedOfferRejects,()V,void testTimedOfferRejects(),org.junit.Test,11,3,4,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|Builder withRejectAllExpiredOffers()|TaskScheduler build(),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/OfferRejectionsTest.java,com.netflix.fenzo.OfferRejectionsTest,testRejectAllOffersOfVm,()V,void testRejectAllOffersOfVm(),org.junit.Test,12,18,22,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|Builder withMaxOffersToReject(int maxOffersToReject)|List emptyList()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|String hostname()|TaskScheduler build()|boolean add(Object e)|boolean addAll(Collection c)|boolean get()|int get()|int incrementAndGet()|int size()|void assertEquals(long expected; long actual)|void clear()|void set(boolean newValue)|void sleep(long millis),18,,0,,0,2,2,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/SpreadingSchedulerTests.java,com.netflix.fenzo.SpreadingSchedulerTests,testCPUBinPackingWithSeveralHosts,()V,void testCPUBinPackingWithSeveralHosts(),org.junit.Test,1,1,1,void testBinPackingWithSeveralHosts(String resource),1,void testBinPackingWithSeveralHosts(String resource),1,,0,0,0,0,0,,0,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/SpreadingSchedulerTests.java,com.netflix.fenzo.SpreadingSchedulerTests,testMemoryBinPackingWithSeveralHosts,()V,void testMemoryBinPackingWithSeveralHosts(),org.junit.Test,1,1,1,void testBinPackingWithSeveralHosts(String resource),1,void testBinPackingWithSeveralHosts(String resource),1,,0,0,0,0,0,,0,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/SpreadingSchedulerTests.java,com.netflix.fenzo.SpreadingSchedulerTests,testNetworkBinPackingWithSeveralHosts,()V,void testNetworkBinPackingWithSeveralHosts(),org.junit.Test,1,1,1,void testBinPackingWithSeveralHosts(String resource),1,void testBinPackingWithSeveralHosts(String resource),1,,0,0,0,0,0,,0,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,scaleUpTest1,()V,void scaleUpTest1(),org.junit.Test,9,5,2,TaskScheduler getScheduler(AutoScaleRule[] rules)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),2,TaskScheduler getScheduler(AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,scaleUpTest2,()V,void scaleUpTest2(),org.junit.Test,11,8,4,TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(AutoScaleRule[] rules)|boolean add(Object e)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),4,TaskScheduler getScheduler(AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testOneRuleTwoTypes,()V,void testOneRuleTwoTypes(),org.junit.Test,8,15,13,SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|String getRuleName()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|boolean add(Object e)|boolean equals(Object anObject)|long getCount()|void countDown()|void fail(String message)|void sleep(long millis),10,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,2,2,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,1,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testTwoRulesOneNeedsScaleUp,()V,void testTwoRulesOneNeedsScaleUp(),org.junit.Test,14,5,2,TaskScheduler getScheduler(AutoScaleRule[] rules)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),2,TaskScheduler getScheduler(AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testSimpleScaleDownAction,()V,void testSimpleScaleDownAction(),org.junit.Test,19,8,4,TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules)|boolean add(Object e)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),4,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testTwoRuleScaleDownAction,()V,void testTwoRuleScaleDownAction(),org.junit.Test,20,6,3,String getRuleName()|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),3,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testScaleDownBalanced,()V,void testScaleDownBalanced(),org.junit.Test,23,12,12,AutoScaleRule createRule(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall)|Builder withAutoScaleByAttributeName(String name)|Builder withAutoScaleDownBalancedByAttributeName(String name)|Builder withAutoScaleRule(AutoScaleRule rule)|Builder withFitnessCalculator(VMTaskFitnessCalculator fitnessCalculator)|Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|ConstraintEvaluator getHostAttributeHardConstraint(String attributeName; String value)|TaskRequest getTaskRequest(double cpus; double memory; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints)|TaskScheduler build()|boolean add(Object e),11,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testScaledDownHostOffer,()V,void testScaledDownHostOffer(),org.junit.Test,26,16,15,Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),13,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testResourceShortfall,()V,void testResourceShortfall(),org.junit.Test,26,9,8,AutoScaleRule createRule(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall)|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules)|boolean add(Object e)|boolean addAll(Collection c)|int getMaxIdleHostsToKeep()|void setAutoscalerCallback(Action1<AutoScaleAction> callback),8,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testAddingNewRule,()V,void testAddingNewRule(),org.junit.Test,26,15,23,AutoScaleRule createRule(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall)|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e),12,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules),1,,0,0,0,0,0,,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testRemovingExistingRule,()V,void testRemovingExistingRule(),org.junit.Test,21,15,17,AutoScaleRule createRule(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall)|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void setAutoscalerCallback(Action1<AutoScaleAction> callback),15,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testDelayedAutoscaleUp,()V,void testDelayedAutoscaleUp(),org.junit.Test,1,1,1,void testScaleUpDelay(int N),1,void testScaleUpDelay(int N),1,,0,1,1,0,0,java.lang.Exception,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testScaleUpDelayReset,()V,void testScaleUpDelayReset(),org.junit.Test,1,1,1,void testScaleUpDelay(int N),1,void testScaleUpDelay(int N),1,,0,1,1,0,0,java.lang.Exception,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testDelayedAutoscaleDown,()V,void testDelayedAutoscaleDown(),org.junit.Test,1,1,1,void testScaleDownDelay(int N),1,void testScaleDownDelay(int N),1,,0,1,1,0,0,java.lang.Exception,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testScaleDownDelayReset,()V,void testScaleDownDelayReset(),org.junit.Test,1,1,1,void testScaleDownDelay(int N),1,void testScaleDownDelay(int N),1,,0,1,1,0,0,java.lang.Exception,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testRuleWithMinSize,()V,void testRuleWithMinSize(),org.junit.Test,16,22,22,AutoScaleRule createWithMinSize(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall; int minSize)|Collection<String> getHosts()|List emptyList()|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int addAndGet(int delta)|int get()|int size()|void assertEquals(long expected; long actual)|void clear()|void sleep(long millis),21,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,2,2,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,1,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testRuleWithMinSize2,()V,void testRuleWithMinSize2(),org.junit.Test,15,21,22,AutoScaleRule createWithMinSize(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall; int minSize)|Collection<String> getHosts()|List emptyList()|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int addAndGet(int delta)|int get()|int size()|void assertEquals(long expected; long actual)|void clear()|void sleep(long millis),21,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,2,2,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,1,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testRuleWithMaxSize,()V,void testRuleWithMaxSize(),org.junit.Test,19,37,36,Action2<TaskRequest;String> getTaskAssigner()|AutoScaleRule createWithMaxSize(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall; int maxSize)|Collection values()|Map<String;VMAssignmentResult> getResultMap()|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int addAndGet(int delta)|int get()|int getScaleUpCount()|int size()|void assertEquals(long expected; long actual)|void assertTrue(boolean condition)|void call(T1 t1; T2 t2)|void clear()|void println(String x)|void sleep(long millis),30,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,3,3,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,3,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testRuleWithMaxSize2,()V,void testRuleWithMaxSize2(),org.junit.Test,18,36,36,Action2<TaskRequest;String> getTaskAssigner()|AutoScaleRule createWithMaxSize(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall; int maxSize)|Collection values()|Map<String;VMAssignmentResult> getResultMap()|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|TaskRequest getRequest()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int addAndGet(int delta)|int get()|int getScaleUpCount()|int size()|void assertEquals(long expected; long actual)|void assertTrue(boolean condition)|void call(T1 t1; T2 t2)|void clear()|void println(String x)|void sleep(long millis),30,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,3,3,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,3,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testTask2ClustersGetterAggressiveScaleUp,()V,void testTask2ClustersGetterAggressiveScaleUp(),org.junit.Test,39,58,81,AutoScaleRule createRule(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall)|Builder withLoopIntervalMillis(long loopIntervalMillis)|Builder withMaxDelayMillis(long maxDelayMillis)|Builder withSchedulingResultCallback(Action1<SchedulingResult> callback)|Builder withTaskQueue(TaskQueue taskQ)|Builder withTaskScheduler(TaskScheduler taskScheduler)|Collection values()|Iterator iterator()|List singletonList(Object o)|List<Exception> getExceptions()|Map<String;VMAssignmentResult> getResultMap()|Object get()|Object get(Object key)|Object next()|Object put(Object key; Object value)|Object putIfAbsent(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|Set keySet()|Set<TaskAssignmentResult> getTasksAssigned()|String getRuleName()|TaskQueue createTieredQueue(int numTiers)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|TaskSchedulingService build()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|boolean await(long timeout; TimeUnit unit)|boolean isEmpty()|int getScaleUpCount()|int intValue()|int size()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void clear()|void countDown()|void fail(String message)|void forEach(Consumer action)|void println(String x)|void queueTask(QueuableTask task)|void set(Object newValue)|void setTaskToClusterAutoScalerMapGetter(Func1<QueuableTask;List<String>> getter)|void sleep(long millis)|void start(),51,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,3,3,0,0,java.lang.InterruptedException,6,7,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/AutoScalerTest.java,com.netflix.fenzo.AutoScalerTest,testAutoscalerBlockingCallback,()V,void testAutoscalerBlockingCallback(),org.junit.Test,32,43,48,AutoScaleRule createWithMaxSize(String name; int min; int max; long coolDownSecs; double cpuTooSmall; double memoryTooSmall; int maxSize)|Collection values()|Collection<String> getHosts()|List emptyList()|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|String getHostname()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|boolean addAll(Collection c)|boolean contains(Object o)|int size()|long getCount()|void assertEquals(String message; long expected; long actual)|void assertFalse(boolean condition)|void countDown()|void forEach(Consumer action)|void sleep(long millis),29,TaskScheduler getScheduler(Action1<VirtualMachineLease> leaseRejectCalback; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),1,,0,5,5,1,0,java.lang.IllegalStateException|java.lang.InterruptedException,2,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/VMCollectionTest.java,com.netflix.fenzo.VMCollectionTest,clonePseudoVMsForGroups,()V,void clonePseudoVMsForGroups(),org.junit.Test,14,16,24,AutoScaleRule getAutoScaleRule(String name; int maxSize)|Collection values()|Iterator iterator()|Map singletonMap(Object key; Object value)|Map<String;List<String>> clonePseudoVMsForGroups(Map<String;Integer> groupCounts; Func1<String;AutoScaleRule> ruleGetter; Predicate<VirtualMachineLease> vmFilter)|Object next()|Set keySet()|String getRuleName()|VMCollection createVmCollection(ConcurrentMap<String;String> vmIdTohostNames; ConcurrentMap<String;String> leasesToHostnames; TaskTracker taskTracker; Map<String;AssignableVirtualMachine> avms)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|boolean addLease(VirtualMachineLease l)|int getMaxSize()|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void assertNotNull(Object object)|void updateCurrTotalLease(),17,AutoScaleRule getAutoScaleRule(String name; int maxSize)|VMCollection createVmCollection(ConcurrentMap<String;String> vmIdTohostNames; ConcurrentMap<String;String> leasesToHostnames; TaskTracker taskTracker; Map<String;AssignableVirtualMachine> avms),2,,0,0,0,0,0,,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/VMCollectionTest.java,com.netflix.fenzo.VMCollectionTest,testWithInactiveAgents,()V,void testWithInactiveAgents(),org.junit.Test,13,23,41,AutoScaleRule getAutoScaleRule(String name; int maxSize)|Collection values()|Iterator iterator()|Map singletonMap(Object key; Object value)|Map<String;List<String>> clonePseudoVMsForGroups(Map<String;Integer> groupCounts; Func1<String;AutoScaleRule> ruleGetter; Predicate<VirtualMachineLease> vmFilter)|Map<String;Protos.Attribute> getAttributeMap()|Object get(Object key)|Object next()|Protos.Value.Text getText()|String getAttrValue(String attrName)|String getRuleName()|String getValue()|VMCollection createVmCollection(ConcurrentMap<String;String> vmIdTohostNames; ConcurrentMap<String;String> leasesToHostnames; TaskTracker taskTracker; Map<String;AssignableVirtualMachine> avms)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double disk; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap; Map<String;Double> scalarResources)|boolean addLease(VirtualMachineLease l)|boolean equals(Object anObject)|int getMaxSize()|int size()|void assertEquals(long expected; long actual)|void assertNotNull(Object object)|void assertTrue(String message; boolean condition)|void println(String x)|void updateCurrTotalLease(),23,AutoScaleRule getAutoScaleRule(String name; int maxSize)|VMCollection createVmCollection(ConcurrentMap<String;String> vmIdTohostNames; ConcurrentMap<String;String> leasesToHostnames; TaskTracker taskTracker; Map<String;AssignableVirtualMachine> avms),2,,0,0,0,0,0,,5,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testSimpleResourceSetAllocation,()V,void testSimpleResourceSetAllocation(),org.junit.Test,21,25,42,Collection values()|Iterator iterator()|List<PreferentialNamedConsumableResourceSet.ConsumeResult> getrSets()|Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getId()|String getResName()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int getIndex()|int size()|void assertTrue(boolean condition)|void println(String x),21,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testResSetAllocationFailure,()V,void testResSetAllocationFailure(),org.junit.Test,33,37,59,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<PreferentialNamedConsumableResourceSet.ConsumeResult> getrSets()|Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getResName()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VMResource getResource()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int getIndex()|int size()|void assertTrue(boolean condition),21,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,1,1,0,0,java.lang.IllegalStateException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testResSetAllocFillupSubRes,()V,void testResSetAllocFillupSubRes(),org.junit.Test,29,33,55,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<PreferentialNamedConsumableResourceSet.ConsumeResult> getrSets()|Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getResName()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VMResource getResource()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int getIndex()|int size()|void assertTrue(boolean condition),21,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,1,1,0,0,java.lang.IllegalStateException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testResSetAllocFillWith0SubresRequests,()V,void testResSetAllocFillWith0SubresRequests(),org.junit.Test,27,32,45,Collection values()|Iterator iterator()|Map singletonMap(Object key; Object value)|Map<String;NamedResourceSetRequest> getCustomNamedResources()|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object get(int index)|Object next()|Object put(Object key; Object value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getResName()|String getResValue()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void assertTrue(boolean condition)|void sort(List list),24,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,1,1,0,0,java.lang.IllegalStateException,5,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testNoResSetReqJob,()V,void testNoResSetReqJob(),org.junit.Test,32,34,84,Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|Map singletonMap(Object key; Object value)|Map<String;NamedResourceSetRequest> getCustomNamedResources()|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getResName()|String getResValue()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VMResource getResource()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void assertTrue(boolean condition)|void call(T1 t1; T2 t2)|void clear(),28,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,3,3,0,0,java.lang.IllegalStateException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testInitingSchedulerWithPreviousTasks,()V,void testInitingSchedulerWithPreviousTasks(),org.junit.Test,47,47,112,Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List singletonList(Object o)|Map singletonMap(Object key; Object value)|Map<String;NamedResourceSetRequest> getCustomNamedResources()|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getResName()|String getResValue()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void call(T1 t1; T2 t2)|void clear()|void setAssignedResources(AssignedResources assignedResources)|void setConsumedNamedResources(List<PreferentialNamedConsumableResourceSet.ConsumeResult> consumedNamedResources),27,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,6,6,0,0,java.lang.IllegalStateException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testTwoHostAssignment,()V,void testTwoHostAssignment(),org.junit.Test,21,23,31,Collection values()|Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object put(Object key; Object value)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String getResName()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void sort(List list),18,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,1,1,0,0,java.lang.IllegalStateException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testReAssignment,()V,void testReAssignment(),org.junit.Test,30,34,62,Action2<String;String> getTaskUnAssigner()|Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String getResName()|String getTaskId()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VMResource getResource()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void call(T1 t1; T2 t2)|void clear(),27,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,5,5,0,0,java.lang.IllegalStateException,6,6,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testScaleUp,()V,void testScaleUp(),org.junit.Test,22,15,12,Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|String getResName()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskSchedulerWithAutoscale(boolean useBinPacking; Action1<AutoScaleAction> callback; AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e),7,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskSchedulerWithAutoscale(boolean useBinPacking; Action1<AutoScaleAction> callback; AutoScaleRule[] rules),2,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testLeaseExpiry,()V,void testLeaseExpiry(),org.junit.Test,34,35,80,Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|Map singletonMap(Object key; Object value)|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String getResName()|String hostname()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VMResource getResource()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void call(T1 t1; T2 t2)|void clear()|void expireAllLeases(String hostname),28,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,5,5,0,0,java.lang.IllegalStateException,7,7,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testLeaseExpiryClearsResourceSets,()V,void testLeaseExpiryClearsResourceSets(),org.junit.Test,39,42,93,Action2<String;String> getTaskUnAssigner()|Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List emptyList()|Map singletonMap(Object key; Object value)|Map<String;NamedResourceSetRequest> getCustomNamedResources()|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set keySet()|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String getId()|String getResName()|String hostname()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void call(T1 t1; T2 t2)|void clear()|void expireAllLeases(String hostname)|void sleep(long millis),32,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,9,9,0,0,java.lang.IllegalStateException|java.lang.InterruptedException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testResourceStatusValues,()V,void testResourceStatusValues(),org.junit.Test,28,29,46,Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|Map singletonMap(Object key; Object value)|Map<String;Map<VMResource;Double[]>> getResourceStatus()|Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getHostname()|String getResName()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VirtualMachineLease getConsumedLease(VMAssignmentResult result)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(long expected; long actual)|void assertTrue(boolean condition)|void call(T1 t1; T2 t2)|void clear(),25,Map<String;Protos.Attribute> getResSetsAttributesMap(String name; int x; int y)|TaskScheduler getTaskScheduler(),2,,0,4,4,0,0,java.lang.IllegalStateException,6,6,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResourceSetsTests.java,com.netflix.fenzo.ResourceSetsTests,testNonExistentResourceSetRequest,()V,void testNonExistentResourceSetRequest(),org.junit.Test,15,15,25,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|Map singletonMap(Object key; Object value)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|String getResName()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double disk; double network; int ports; List<? extends ConstraintEvaluator> hardConstraints; List<? extends VMTaskFitnessCalculator> softConstraints; Map<String;TaskRequest.NamedResourceSetRequest> resourceSets)|TaskScheduler getTaskScheduler()|VMResource getResource()|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual),18,TaskScheduler getTaskScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ActiveVmGroupsTests.java,com.netflix.fenzo.ActiveVmGroupsTests,testInactiveVmGroup,()V,void testInactiveVmGroup(),org.junit.Test,10,10,25,Collection values()|Iterator iterator()|List singletonList(Object o)|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set<TaskAssignmentResult> getTasksAssigned()|String getId()|String getTaskId()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual),16,,0,,0,2,2,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ActiveVmGroupsTests.java,com.netflix.fenzo.ActiveVmGroupsTests,testOffersRejectOnInactiveVMs,()V,void testOffersRejectOnInactiveVMs(),org.junit.Test,15,4,4,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build()|boolean add(Object e),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ActiveVmGroupsTests.java,com.netflix.fenzo.ActiveVmGroupsTests,testRandomizedOfferRejection,()V,void testRandomizedOfferRejection(),org.junit.Test,6,4,4,Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|TaskScheduler build(),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ActiveVmGroupsTests.java,com.netflix.fenzo.ActiveVmGroupsTests,testActiveASGsOfTwoTypes,()V,void testActiveASGsOfTwoTypes(),org.junit.Test,25,1,4,Builder withFitnessCalculator(VMTaskFitnessCalculator fitnessCalculator)|Builder withLeaseOfferExpirySecs(long leaseOfferExpirySecs)|Builder withLeaseRejectAction(Action1<VirtualMachineLease> leaseRejectAction)|TaskScheduler build(),4,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/NaiveShortfallEvaluatorTest.java,com.netflix.fenzo.NaiveShortfallEvaluatorTest,testShortfallAdjusting,()V,void testShortfallAdjusting(),org.junit.Test,4,4,14,List asList(Object[] a)|Map<String;Integer> getShortfall(Set<String> vmGroupNames; Set<TaskRequest> failures; AutoScaleRules autoScaleRules)|Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|Object get(Object key)|QueuableTask createFailedTask(String id)|void assertThat(Object actual; Matcher matcher),7,QueuableTask createFailedTask(String id),1,,0,0,0,0,0,,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testNoResAllocsMeansUnlimited,()V,void testNoResAllocsMeansUnlimited(),org.junit.Test,10,14,16,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object getValue()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getSchedulerNoResAllocs()|boolean add(Object e)|boolean isSuccessful()|int size()|void assertEquals(String message; long expected; long actual),13,TaskScheduler getSchedulerNoResAllocs(),1,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testSingleAppRsv,()V,void testSingleAppRsv(),org.junit.Test,13,17,26,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;ResAllocs> getResAllocs()|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object get(int index)|Object getValue()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double network; int ports)|TaskScheduler getScheduler()|VMResource getResource()|boolean add(Object e)|boolean isSuccessful()|double getCores()|int size()|void assertEquals(String message; long expected; long actual)|void assertTrue(String message; boolean condition),23,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testTwoAppRsv,()V,void testTwoAppRsv(),org.junit.Test,15,26,31,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;ResAllocs> getResAllocs()|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object get(int index)|Object getValue()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|String taskGroupName()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double network; int ports)|TaskScheduler getScheduler()|VMResource getResource()|boolean add(Object e)|boolean isSuccessful()|double getCores()|int size()|void assertEquals(String message; long expected; long actual)|void assertEquals(long expected; long actual)|void assertTrue(String message; boolean condition),26,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testScaleUpForRsv,()V,void testScaleUpForRsv(),org.junit.Test,23,14,15,Object put(Object key; Object value)|Protos.Attribute build()|Protos.Attribute.Builder newBuilder()|Protos.Attribute.Builder setName(String value)|Protos.Attribute.Builder setText(Protos.Value.Text.Builder builderForValue)|Protos.Attribute.Builder setType(Protos.Value.Type value)|Protos.Value.Text.Builder newBuilder()|Protos.Value.Text.Builder setValue(String value)|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double network; int ports)|TaskScheduler getAutoscalingScheduler(AutoScaleRule[] rules)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; double network; List<VirtualMachineLease.Range> portRanges; Map<String;Protos.Attribute> attributesMap)|boolean add(Object e)|void setAutoscalerCallback(Action1<AutoScaleAction> callback),13,TaskScheduler getAutoscalingScheduler(AutoScaleRule[] rules),1,,0,1,1,0,0,java.lang.IllegalStateException,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testResAllocsModification,()V,void testResAllocsModification(),org.junit.Test,25,33,50,Action2<TaskRequest;String> getTaskAssigner()|Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;ResAllocs> getResAllocs()|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object get(int index)|Object getKey()|Object getValue()|Object next()|ResAllocs create(String name; double cores; double memory; double network; double disk)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getRequest()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double network; int ports)|TaskScheduler getScheduler()|VMResource getResource()|boolean add(Object e)|boolean isSuccessful()|double getCores()|int size()|void addOrReplaceResAllocs(ResAllocs resAllocs)|void assertEquals(String message; long expected; long actual)|void assertTrue(String message; boolean condition)|void call(T1 t1; T2 t2)|void clear(),30,TaskScheduler getScheduler(),1,,0,4,4,0,0,java.lang.IllegalStateException,6,6,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testAbsentResAllocs,()V,void testAbsentResAllocs(),org.junit.Test,9,9,20,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;ResAllocs> getResAllocs()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object get(int index)|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double network; int ports)|TaskScheduler getScheduler()|VMResource getResource()|boolean add(Object e)|double getCores()|int size()|void assertEquals(String message; long expected; long actual)|void assertTrue(String message; boolean condition),18,TaskScheduler getScheduler(),1,,0,1,1,0,0,java.lang.IllegalStateException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ResAllocsTests.java,com.netflix.fenzo.ResAllocsTests,testAddingNewResAllocs,()V,void testAddingNewResAllocs(),org.junit.Test,17,20,33,Collection values()|Iterator iterator()|List<AssignmentFailure> getFailures()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map<String;ResAllocs> getResAllocs()|Map<String;VMAssignmentResult> getResultMap()|Map<TaskRequest;List<TaskAssignmentResult>> getFailures()|Object get(Object key)|Object get(int index)|Object getValue()|Object next()|ResAllocs create(String name; double cores; double memory; double network; double disk)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set entrySet()|Set<TaskAssignmentResult> getTasksAssigned()|TaskRequest getTaskRequest(String grpName; double cpus; double memory; double network; int ports)|TaskScheduler getScheduler()|VMResource getResource()|boolean add(Object e)|boolean isSuccessful()|double getCores()|int size()|void addOrReplaceResAllocs(ResAllocs resAllocs)|void assertEquals(String message; long expected; long actual)|void assertTrue(String message; boolean condition)|void clear(),26,TaskScheduler getScheduler(),1,,0,2,2,0,0,java.lang.IllegalStateException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScaleDownConstraintExecutorTest.java,com.netflix.fenzo.ScaleDownConstraintExecutorTest,testScaleDownOrdering,()V,void testScaleDownOrdering(),org.junit.Test,11,15,37,Collector toList()|List asList(Object[] a)|List<Set<VirtualMachineLease>> evaluate(Collection<VirtualMachineLease> candidates)|List<VirtualMachineLease> evaluate(Collection<VirtualMachineLease> candidates)|List<VirtualMachineLease> leasesWithIds(String[] ids)|Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|Object any()|Object collect(Collector collector)|Object get(int index)|Object put(Object key; Object value)|OngoingStubbing then(Answer answer)|OngoingStubbing thenReturn(Object value)|OngoingStubbing when(Object methodCall)|Result evaluate(VirtualMachineLease candidate; Optional<CONTEXT> context)|Result<CONTEXT> of(double score)|Set<T> asSet(T[] values)|Stream map(Function mapper)|Stream stream()|int leaseIndexOf(InvocationOnMock invocation)|void assertThat(Object actual; Matcher matcher),21,Set<T> asSet(T[] values)|int leaseIndexOf(InvocationOnMock invocation),2,,0,0,0,0,0,,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/ScaleDownConstraintExecutorTest.java,com.netflix.fenzo.ScaleDownConstraintExecutorTest,testWeightsValidation,()V,void testWeightsValidation(),org.junit.Test,4,8,11,Matcher is(Object value)|Object put(Object key; Object value)|String getMessage()|boolean contains(CharSequence s)|void assertThat(Object actual; Matcher matcher)|void fail(String message),6,,0,,0,0,0,0,0,,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BinPackingSchedulerTests.java,com.netflix.fenzo.BinPackingSchedulerTests,testCPUBinPacking1,()V,void testCPUBinPacking1(),org.junit.Test,18,18,25,Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set keySet()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(VMTaskFitnessCalculator fitnessCalculator)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|int size()|void assertEquals(Object expected; Object actual)|void assertEquals(long expected; long actual)|void clear(),14,TaskScheduler getScheduler(VMTaskFitnessCalculator fitnessCalculator),1,,0,2,2,0,0,java.lang.IllegalStateException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BinPackingSchedulerTests.java,com.netflix.fenzo.BinPackingSchedulerTests,testCPUBinPacking2,()V,void testCPUBinPacking2(),org.junit.Test,29,29,48,Action2<TaskRequest;String> getTaskAssigner()|Iterator iterator()|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|Map<String;VMAssignmentResult> getResultMap()|Object next()|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|Set keySet()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(VMTaskFitnessCalculator fitnessCalculator)|VirtualMachineLease getLeaseOffer(String hostname; double cpus; double memory; int portBegin; int portEnd)|boolean add(Object e)|boolean equals(Object anObject)|double getCPUs()|double getMemory()|int size()|void assertEquals(long expected; long actual)|void assertTrue(String message; boolean condition)|void assertTrue(boolean condition)|void call(T1 t1; T2 t2)|void clear(),20,TaskScheduler getScheduler(VMTaskFitnessCalculator fitnessCalculator),1,,0,5,5,0,0,java.lang.IllegalStateException,5,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BinPackingSchedulerTests.java,com.netflix.fenzo.BinPackingSchedulerTests,testCPUBinPackingWithSeveralHosts,()V,void testCPUBinPackingWithSeveralHosts(),org.junit.Test,1,1,1,void testBinPackingWithSeveralHosts(String resource),1,void testBinPackingWithSeveralHosts(String resource),1,,0,0,0,0,0,,0,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BinPackingSchedulerTests.java,com.netflix.fenzo.BinPackingSchedulerTests,testMemoryBinPackingWithSeveralHosts,()V,void testMemoryBinPackingWithSeveralHosts(),org.junit.Test,1,1,1,void testBinPackingWithSeveralHosts(String resource),1,void testBinPackingWithSeveralHosts(String resource),1,,0,0,0,0,0,,0,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BinPackingSchedulerTests.java,com.netflix.fenzo.BinPackingSchedulerTests,testNetworkBinPackingWithSeveralHosts,()V,void testNetworkBinPackingWithSeveralHosts(),org.junit.Test,1,1,1,void testBinPackingWithSeveralHosts(String resource),1,void testBinPackingWithSeveralHosts(String resource),1,,0,0,0,0,0,,0,5,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/BinPackingSchedulerTests.java,com.netflix.fenzo.BinPackingSchedulerTests,testMemoryBinPacking2,()V,void testMemoryBinPacking2(),org.junit.Test,18,24,19,Collection values()|List<VirtualMachineLease> getLeases(int hostSuffixBegin; int numHosts; double cpus; double memory; int portBeg; int portEnd)|List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; int portBeg; int portEnd)|List<VirtualMachineLease> getLeasesUsed()|Map<String;VMAssignmentResult> getResultMap()|Object get(int index)|SchedulingResult scheduleOnce(List<? extends TaskRequest> requests; List<VirtualMachineLease> newLeases)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler(VMTaskFitnessCalculator fitnessCalculator)|boolean add(Object e)|boolean addAll(Collection c)|double cpuCores()|int size()|void assertEquals(long expected; long actual),14,TaskScheduler getScheduler(VMTaskFitnessCalculator fitnessCalculator),1,,0,1,1,0,0,java.lang.IllegalStateException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/plugins/WeightedAverageFitnessCalculatorTest.java,com.netflix.fenzo.plugins.WeightedAverageFitnessCalculatorTest,testWeightsMustEqualOne,()V,void testWeightsMustEqualOne(),org.junit.Test,3,3,2,List asList(Object[] a)|Object mock(Class classToMock),2,,0,,0,0,0,0,0,,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/plugins/WeightedAverageFitnessCalculatorTest.java,com.netflix.fenzo.plugins.WeightedAverageFitnessCalculatorTest,testCalculatorWeightedAverage,()V,void testCalculatorWeightedAverage(),org.junit.Test,8,8,20,List asList(Object[] a)|Object any()|Object mock(Class classToMock)|OngoingStubbing thenReturn(Object value)|OngoingStubbing when(Object methodCall)|double calculateFitness(TaskRequest taskRequest; VirtualMachineCurrentState targetVM; TaskTrackerState taskTrackerState)|void assertEquals(double expected; double actual; double delta),7,,0,,0,0,0,0,0,,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/plugins/WeightedAverageFitnessCalculatorTest.java,com.netflix.fenzo.plugins.WeightedAverageFitnessCalculatorTest,testCalculatorWeightedAverageWithZero,()V,void testCalculatorWeightedAverageWithZero(),org.junit.Test,8,8,20,List asList(Object[] a)|Object any()|Object mock(Class classToMock)|OngoingStubbing thenReturn(Object value)|OngoingStubbing when(Object methodCall)|double calculateFitness(TaskRequest taskRequest; VirtualMachineCurrentState targetVM; TaskTrackerState taskTrackerState)|void assertEquals(double expected; double actual; double delta),7,,0,,0,0,0,0,0,,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/plugins/BalancedScaleDownConstraintEvaluatorTest.java,com.netflix.fenzo.plugins.BalancedScaleDownConstraintEvaluatorTest,testBalancing,()V,void testBalancing(),org.junit.Test,5,5,9,Optional empty()|Optional<Map<String;Integer>> evaluateAndVerify(VirtualMachineLease lease; Optional<Map<String;Integer>> context; double expectedScore)|TestableVirtualMachineLease leaseWithId(String id),3,Optional<Map<String;Integer>> evaluateAndVerify(VirtualMachineLease lease; Optional<Map<String;Integer>> context; double expectedScore),1,,0,0,0,0,0,,0,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueTest.java,com.netflix.fenzo.queues.tiered.TieredQueueTest,testAddingTasks,()V,void testAddingTasks(),org.junit.Test,22,32,29,Assignable<? extends TaskRequest> next()|QAttributes getQAttributes()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|T getTask()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean reset()|int getTierNumber()|void assertEquals(long expected; long actual)|void queueTask(QueuableTask task),9,,0,,0,2,2,0,0,com.netflix.fenzo.queues.TaskQueueException|com.netflix.fenzo.queues.TaskQueueMultiException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueTest.java,com.netflix.fenzo.queues.tiered.TieredQueueTest,testAddRunningTasks,()V,void testAddRunningTasks(),org.junit.Test,21,38,31,Assignable<? extends TaskRequest> next()|Map<String;VMAssignmentResult> getResultMap()|QAttributes getQAttributes()|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|String getBucketName()|T getTask()|TaskRequest getTaskRequest(double cpus; double memory; int ports)|TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; Action1<SchedulingResult> resultCallback)|boolean reset()|int size()|void assertEquals(long expected; long actual)|void initializeRunningTask(QueuableTask task; String hostname)|void println(String x)|void queueTask(QueuableTask task),15,TaskScheduler getScheduler()|TaskSchedulingService getSchedulingService(TaskQueue queue; TaskScheduler scheduler; Action1<SchedulingResult> resultCallback),2,,0,2,2,0,0,com.netflix.fenzo.queues.TaskQueueException|com.netflix.fenzo.queues.TaskQueueMultiException,3,3,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueTest.java,com.netflix.fenzo.queues.tiered.TieredQueueTest,testTierSlas,()V,void testTierSlas(),org.junit.Test,19,19,20,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map emptyMap()|Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|Object put(Object key; Object value)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|boolean await(long timeout; TimeUnit unit)|int get()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(long expected; long actual)|void assertTrue(String message; boolean condition)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames)|void setSla(TaskQueueSla sla)|void sleep(long millis)|void start(),14,Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames),3,,0,3,3,0,0,java.lang.IllegalArgumentException|java.lang.InterruptedException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueTest.java,com.netflix.fenzo.queues.tiered.TieredQueueTest,testTierSlas2,()V,void testTierSlas2(),org.junit.Test,38,38,52,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map singletonMap(Object key; Object value)|Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|Object get()|Object put(Object key; Object value)|ResAllocs build()|ResAllocsBuilder withCores(double cores)|ResAllocsBuilder withMemory(double memory)|ResAllocsBuilder withNetworkMbps(double networkMbps)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|boolean await(long timeout; TimeUnit unit)|int get()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(long expected; long actual)|void assertTrue(String message; boolean condition)|void clear()|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames)|void set(Object newValue)|void set(int newValue)|void setSla(TaskQueueSla sla)|void sleep(long millis)|void start(),22,Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames),3,,0,6,6,0,0,java.lang.IllegalArgumentException|java.lang.InterruptedException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueTest.java,com.netflix.fenzo.queues.tiered.TieredQueueTest,testTierSlasWithPreviouslyRunningTasks,()V,void testTierSlasWithPreviouslyRunningTasks(),org.junit.Test,22,22,23,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map emptyMap()|Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|Object get()|Object put(Object key; Object value)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|boolean await(long timeout; TimeUnit unit)|int get()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(long expected; long actual)|void assertTrue(String message; boolean condition)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames)|void initializeRunningTasksForBuckets(TaskSchedulingService schedulingService; int numTasks; String[] bucketNames)|void setSla(TaskQueueSla sla)|void sleep(long millis)|void start(),16,Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames)|void initializeRunningTasksForBuckets(TaskSchedulingService schedulingService; int numTasks; String[] bucketNames),4,,0,3,3,0,0,java.lang.IllegalArgumentException|java.lang.InterruptedException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueTest.java,com.netflix.fenzo.queues.tiered.TieredQueueTest,testTierSlasWithOneBucketWithNoTasks,()V,void testTierSlasWithOneBucketWithNoTasks(),org.junit.Test,21,21,24,List<VirtualMachineLease> getLeases(int numHosts; double cpus; double memory; double network; int portBeg; int portEnd)|Map singletonMap(Object key; Object value)|Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|Object put(Object key; Object value)|ResAllocs build()|ResAllocsBuilder withCores(double cores)|ResAllocsBuilder withMemory(double memory)|ResAllocsBuilder withNetworkMbps(double networkMbps)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|boolean await(long timeout; TimeUnit unit)|int get()|void addLeases(List<? extends VirtualMachineLease> leases)|void assertEquals(long expected; long actual)|void assertTrue(String message; boolean condition)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames)|void setSla(TaskQueueSla sla)|void sleep(long millis)|void start(),18,Map<Integer;Map<String;ResAllocs>> getTierAllocsForBuckets(Map<String;Double> bucketWeights)|TaskSchedulingService setupSchedSvcWithAssignmentCounters(TaskQueue queue; AtomicReference<CountDownLatch> latch; AtomicInteger[] counters)|void createTasksForBuckets(TaskQueue queue; int numTasks; String[] bucketNames),3,,0,3,3,0,0,java.lang.IllegalArgumentException|java.lang.InterruptedException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/QueueBucketTest.java,com.netflix.fenzo.queues.tiered.QueueBucketTest,testBucketGuaranteesAffectEffectiveUsageComputation,()V,void testBucketGuaranteesAffectEffectiveUsageComputation(),org.junit.Test,13,13,40,Matcher is(Object value)|QueuableTask createTask(ResAllocs taskAllocs)|ResAllocs createResAllocs(String name; int multiplier)|ResAllocs createResAllocs(int multiplier)|ResAllocs getEffectiveUsage()|boolean hasEqualResources(ResAllocs first; ResAllocs second)|boolean hasGuaranteedCapacityFor(QueuableTask task)|boolean launchTask(QueuableTask t)|void assertThat(Object actual; Matcher matcher)|void setBucketGuarantees(ResAllocs bucketGuarantees),10,,0,,0,3,3,0,0,com.netflix.fenzo.queues.TaskQueueException,8,8,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/QueueBucketTest.java,com.netflix.fenzo.queues.tiered.QueueBucketTest,testDominantUsageShare,()V,void testDominantUsageShare(),org.junit.Test,9,9,23,Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|Object apply(Object t; Object u)|OngoingStubbing thenReturn(Object value)|OngoingStubbing when(Object methodCall)|QueuableTask createTask(ResAllocs taskAllocs)|ResAllocs createResAllocs(String name; int multiplier)|ResAllocs createResAllocs(int multiplier)|String anyString()|boolean launchTask(QueuableTask t)|double getDominantUsageShare()|int anyInt()|void addUsage(QueuableTask task)|void assertThat(Object actual; Matcher matcher)|void setBucketGuarantees(ResAllocs bucketGuarantees)|void setTotalResources(ResAllocs tierResources),16,,0,,0,1,1,0,0,com.netflix.fenzo.queues.TaskQueueException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/SortedBucketsTest.java,com.netflix.fenzo.queues.tiered.SortedBucketsTest,testSorting,()V,void testSorting(),org.junit.Test,23,25,27,List<QueueBucket> getSortedList()|Object get(int index)|QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|boolean add(QueueBucket bucket)|boolean launchTask(QueuableTask t)|double getDominantUsageShare()|int size()|void addUsage(QueuableTask task)|void assertTrue(boolean condition),10,,0,,0,4,4,0,0,com.netflix.fenzo.queues.TaskQueueException,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/SortedBucketsTest.java,com.netflix.fenzo.queues.tiered.SortedBucketsTest,testDominantResourceUsageRebalancing,()V,void testDominantResourceUsageRebalancing(),org.junit.Test,16,16,20,QueuableTask wrapTask(QAttributes qAttributes; TaskRequest taskRequest)|TaskRequest getTaskRequest(double cpus; double memory; int ports)|UsageTrackedQueue getUsageTracker()|boolean launchTask(QueuableTask t)|void queueTask(QueuableTask task),5,,0,,0,4,4,0,0,com.netflix.fenzo.queues.TaskQueueException,0,0,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TierTest.java,com.netflix.fenzo.queues.tiered.TierTest,testTaskAreLaunchedInCorrectOrder,()V,void testTaskAreLaunchedInCorrectOrder(),org.junit.Test,9,14,21,Assignable<QueuableTask> nextTaskToLaunch()|List subList(int fromIndex; int toIndex)|List<String> queue(int numberOfTasks; ResAllocs resAllocs)|Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|Matcher nullValue()|ResAllocs createResAllocs(String name; int multiplier)|String getId()|T getTask()|boolean add(Object e)|boolean addAll(Collection c)|boolean hasFailure()|void assertThat(Object actual; Matcher matcher)|void assignTask(QueuableTask t),14,List<String> queue(int numberOfTasks; ResAllocs resAllocs),1,,0,5,5,0,0,com.netflix.fenzo.queues.TaskQueueException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TierTest.java,com.netflix.fenzo.queues.tiered.TierTest,testTasksInQueueWithoutSlaConsumeRemainingCapacityOnly,()V,void testTasksInQueueWithoutSlaConsumeRemainingCapacityOnly(),org.junit.Test,8,13,27,Assignable<QueuableTask> nextTaskToLaunch()|List<String> queue(int numberOfTasks; ResAllocs resAllocs)|Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|Matcher is(Object value)|Matcher notNullValue()|ResAllocs createResAllocs(String name; int multiplier)|ResAllocs createResAllocs(int multiplier)|SampleDataGenerator updateTier(int tier; ResAllocs tierCapacity)|String getId()|T getTask()|TierSla getTierSla(int tierNumber)|boolean contains(Object o)|boolean hasFailure()|int consumeAll()|void assertThat(Object actual; Matcher matcher)|void assignTask(QueuableTask t)|void reset()|void setTierSla(TierSla tierSla),19,List<String> queue(int numberOfTasks; ResAllocs resAllocs)|int consumeAll(),2,,0,5,5,0,0,com.netflix.fenzo.queues.TaskQueueException,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TierTest.java,com.netflix.fenzo.queues.tiered.TierTest,testRemovingQueueWithGuaranteesReleasesItsResources,()V,void testRemovingQueueWithGuaranteesReleasesItsResources(),org.junit.Test,6,6,14,List<String> queue(int numberOfTasks; ResAllocs resAllocs)|Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|ResAllocs createResAllocs(String name; int multiplier)|TierSla getTierSla(int tierNumber)|int consumeAll()|void assertThat(Object actual; Matcher matcher)|void removeBucket(int tierNumber; String bucketName)|void reset()|void setTierSla(TierSla tierSla),10,List<String> queue(int numberOfTasks; ResAllocs resAllocs)|int consumeAll(),2,,0,3,3,0,0,com.netflix.fenzo.queues.TaskQueueException,2,2,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/queues/tiered/TieredQueueSlasTest.java,com.netflix.fenzo.queues.tiered.TieredQueueSlasTest,testSlas,()V,void testSlas(),org.junit.Test,6,6,22,Map<Integer;Map<String;ResAllocs>> getBucketCapacities()|Map<Integer;ResAllocs> getTierCapacities()|Map<Integer;TierSla> getSlas()|Matcher equalTo(Object operand)|Matcher is(Matcher matcher)|Matcher is(Object value)|Object get(Object key)|ResAllocs createResAllocs(int multiplier)|ResAllocs getBucketAllocs(String bucketName)|ResAllocs getTierCapacity()|boolean hasEqualResources(ResAllocs first; ResAllocs second)|double evalAllocationShare(String bucket)|int size()|void assertThat(Object actual; Matcher matcher),14,,0,,0,0,0,0,0,,4,4,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/sla/ResAllocsUtilTest.java,com.netflix.fenzo.sla.ResAllocsUtilTest,testAdd,()V,void testAdd(),org.junit.Test,2,2,7,Matcher is(Object value)|ResAllocs add(ResAllocs first; ResAllocs second)|ResAllocs createResAllocs(int multiplier)|boolean hasEqualResources(ResAllocs first; ResAllocs second)|void assertThat(Object actual; Matcher matcher),5,,0,,0,0,0,0,0,,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/sla/ResAllocsUtilTest.java,com.netflix.fenzo.sla.ResAllocsUtilTest,testSubtract,()V,void testSubtract(),org.junit.Test,2,2,7,Matcher is(Object value)|ResAllocs createResAllocs(int multiplier)|ResAllocs subtract(ResAllocs first; ResAllocs second)|boolean hasEqualResources(ResAllocs first; ResAllocs second)|void assertThat(Object actual; Matcher matcher),5,,0,,0,0,0,0,0,,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/sla/ResAllocsUtilTest.java,com.netflix.fenzo.sla.ResAllocsUtilTest,testCeilingOf,()V,void testCeilingOf(),org.junit.Test,2,2,19,Matcher is(Object value)|ResAllocs build()|ResAllocs ceilingOf(ResAllocs first; ResAllocs second)|ResAllocsBuilder withCores(double cores)|ResAllocsBuilder withDisk(double disk)|ResAllocsBuilder withMemory(double memory)|ResAllocsBuilder withNetworkMbps(double networkMbps)|boolean hasEqualResources(ResAllocs first; ResAllocs second)|void assertThat(Object actual; Matcher matcher),9,,0,,0,0,0,0,0,,1,1,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/sla/ResAllocsUtilTest.java,com.netflix.fenzo.sla.ResAllocsUtilTest,testIsBounded,()V,void testIsBounded(),org.junit.Test,8,8,26,Matcher is(Object value)|QueuableTask createTask(ResAllocs taskAllocs)|ResAllocs createResAllocs(int multiplier)|boolean isBounded(ResAllocs first; QueuableTask second)|boolean isBounded(ResAllocs first; ResAllocs second)|void assertThat(Object actual; Matcher matcher),6,,0,,0,0,0,0,0,,6,6,,0,,0
Fenzo,fenzo-core,/fenzo-core/src/test/java/com/netflix/fenzo/sla/ResAllocsUtilTest.java,com.netflix.fenzo.sla.ResAllocsUtilTest,testToResAllocs,()V,void testToResAllocs(),org.junit.Test,2,2,5,Matcher is(Object value)|ResAllocs empty()|ResAllocs toResAllocs(String name; Map<VMResource;Double> resourceMap)|boolean hasEqualResources(ResAllocs first; ResAllocs second)|void assertThat(Object actual; Matcher matcher),5,,0,,0,0,0,0,0,,1,1,,0,,0
