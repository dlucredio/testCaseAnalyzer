<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="protostuff-runtime-view (25 de ago de 2020 08:43:49)"><sessioninfo id="desktop-lucredio-6811c48f" start="1598355829467" dump="1598355829915"/><group name="protostuff-runtime-view"><group name="src/test/java"><package name="io/protostuff/runtime"><class name="io/protostuff/runtime/RuntimeViewTest" sourcefilename="RuntimeViewTest.java"><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBaz" desc="(ILjava/lang/String;J)Lio/protostuff/runtime/Baz;" line="49"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ser" desc="(Lio/protostuff/Schema;)[B" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="len" desc="(Lio/protostuff/Schema;)I" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rs" desc="()Lio/protostuff/runtime/RuntimeSchema;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ex1" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ex3" desc="(II)Lio/protostuff/Schema;" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="in1" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EQ" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="NOTEQ" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GT" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LT" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="117"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RANGE" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="124"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="NOTRANGE" desc="([Ljava/lang/String;)Lio/protostuff/Schema;" line="131"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testLen" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testExcludeBazId" desc="()V" line="145"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testExcludeBazName" desc="()V" line="157"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testExcludeBazTimestamp" desc="()V" line="168"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIncludeOnlyBazId" desc="()V" line="180"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIncludeOnlyBazName" desc="()V" line="192"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIncludeOnlyBazTimestamp" desc="()V" line="202"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="470"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuntimeViewTest.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="10" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="14" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="0" ci="14" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="14" mb="0" cb="0"/><line nr="162" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="0" ci="14" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="10" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="14" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="14" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="14" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="185" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="14" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="14" mb="0" cb="0"/><line nr="194" mi="0" ci="10" mb="0" cb="0"/><line nr="196" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="14" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="14" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="0"/><line nr="209" mi="0" ci="14" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="470"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="470"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="0" covered="470"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></group><group name="src/main/java"><package name="io/protostuff/runtime"><class name="io/protostuff/runtime/Predicate$EQ" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;)Z" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="([Ljava/lang/String;)Lio/protostuff/runtime/Predicate;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/Predicate$LT" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(I)V" line="148"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;)Z" line="156"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;Ljava/lang/Object;)Z" line="162"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="([Ljava/lang/String;)Lio/protostuff/runtime/Predicate;" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/RuntimeView$PostFilteredSchema" sourcefilename="RuntimeView.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lio/protostuff/runtime/RuntimeEnv$Instantiator;[Lio/protostuff/runtime/Field;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/Predicate$RANGE" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(II)V" line="180"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;)Z" line="189"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;Ljava/lang/Object;)Z" line="195"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="([Ljava/lang/String;)Lio/protostuff/runtime/Predicate;" line="202"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/Predicate$Factories" sourcefilename="Predicate.java"><method name="&lt;clinit&gt;" desc="()V" line="242"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/RuntimeView" sourcefilename="RuntimeView.java"><method name="createFrom" desc="(Lio/protostuff/runtime/RuntimeSchema;Lio/protostuff/runtime/RuntimeView$Factory;Lio/protostuff/runtime/Predicate$Factory;[Ljava/lang/String;)Lio/protostuff/Schema;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFrom" desc="(Lio/protostuff/runtime/RuntimeSchema;Lio/protostuff/runtime/RuntimeEnv$Instantiator;Lio/protostuff/runtime/RuntimeView$Factory;Lio/protostuff/runtime/Predicate$Factory;[Ljava/lang/String;)Lio/protostuff/Schema;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAndExclude" desc="(Ljava/lang/Class;Ljava/util/List;Lio/protostuff/runtime/Predicate;)Ljava/util/HashMap;" line="374"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAndExclude" desc="(Ljava/lang/Class;Ljava/util/List;[Ljava/lang/String;)Ljava/util/HashMap;" line="389"><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="includeAndAddTo" desc="(Ljava/util/Map;Ljava/lang/Class;Ljava/util/List;[Ljava/lang/String;)I" line="409"><counter type="INSTRUCTION" missed="5" covered="44"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="127"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/RuntimeView$Factory" sourcefilename="RuntimeView.java"/><class name="io/protostuff/runtime/RuntimeView$Factories" sourcefilename="RuntimeView.java"><method name="&lt;clinit&gt;" desc="()V" line="151"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/Predicate$NOTEQ" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(I)V" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;)Z" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;Ljava/lang/Object;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="([Ljava/lang/String;)Lio/protostuff/runtime/Predicate;" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/Predicate$Factory" sourcefilename="Predicate.java"/><class name="io/protostuff/runtime/Predicate$NOTRANGE" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(II)V" line="213"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;)Z" line="222"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;Ljava/lang/Object;)Z" line="228"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="([Ljava/lang/String;)Lio/protostuff/runtime/Predicate;" line="235"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/Predicate" sourcefilename="Predicate.java"/><class name="io/protostuff/runtime/Predicate$GT" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(I)V" line="116"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;)Z" line="124"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/protostuff/runtime/Field;Ljava/lang/Object;)Z" line="130"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="([Ljava/lang/String;)Lio/protostuff/runtime/Predicate;" line="137"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/protostuff/runtime/RuntimeView$BaseSchema" sourcefilename="RuntimeView.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lio/protostuff/runtime/RuntimeEnv$Instantiator;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeClass" desc="()Ljava/lang/Class;" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="messageName" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="messageFullName" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInitialized" desc="(Ljava/lang/Object;)Z" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMessage" desc="()Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Predicate.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="2" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="2"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="9" ci="0" mb="2" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="2"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="9" ci="0" mb="2" cb="0"/><line nr="162" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="14" mb="0" cb="4"/><line nr="195" mi="0" ci="14" mb="0" cb="4"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="14" ci="0" mb="4" cb="0"/><line nr="228" mi="0" ci="14" mb="0" cb="4"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="28" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="257" mi="0" ci="8" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="8" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="8" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="278"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="10" covered="49"/><counter type="COMPLEXITY" missed="16" covered="37"/><counter type="METHOD" missed="10" covered="27"/><counter type="CLASS" missed="0" covered="13"/></sourcefile><sourcefile name="RuntimeView.java"><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="24" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="1" cb="1"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="24" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="12" ci="0" mb="4" cb="0"/><line nr="181" mi="7" ci="0" mb="2" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="4" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="2" cb="0"/><line nr="204" mi="0" ci="13" mb="0" cb="2"/><line nr="206" mi="0" ci="6" mb="0" cb="2"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="8" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="12" mb="0" cb="2"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="26" mb="0" cb="0"/><line nr="244" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="7" ci="0" mb="2" cb="0"/><line nr="251" mi="7" ci="0" mb="2" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="8" ci="0" mb="4" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="2" cb="0"/><line nr="274" mi="0" ci="17" mb="0" cb="2"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="8" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="12" mb="0" cb="2"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="26" mb="0" cb="0"/><line nr="321" mi="6" ci="0" mb="0" cb="0"/><line nr="322" mi="7" ci="0" mb="2" cb="0"/><line nr="328" mi="7" ci="0" mb="2" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="333" mi="8" ci="0" mb="4" cb="0"/><line nr="334" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="7" ci="0" mb="2" cb="0"/><line nr="352" mi="0" ci="17" mb="0" cb="2"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="11" mb="0" cb="2"/><line nr="377" mi="0" ci="4" mb="0" cb="2"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="2" cb="2"/><line nr="390" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="11" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="2"/><line nr="400" mi="0" ci="6" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="5" mb="2" cb="2"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="11" mb="0" cb="2"/><line nr="417" mi="0" ci="5" mb="0" cb="2"/><line nr="419" mi="0" ci="6" mb="0" cb="0"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="423" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="227" covered="454"/><counter type="BRANCH" missed="37" covered="31"/><counter type="LINE" missed="43" covered="74"/><counter type="COMPLEXITY" missed="37" covered="35"/><counter type="METHOD" missed="16" covered="22"/><counter type="CLASS" missed="0" covered="12"/></sourcefile><counter type="INSTRUCTION" missed="287" covered="732"/><counter type="BRANCH" missed="49" covered="51"/><counter type="LINE" missed="53" covered="123"/><counter type="COMPLEXITY" missed="53" covered="72"/><counter type="METHOD" missed="26" covered="49"/><counter type="CLASS" missed="0" covered="25"/></package><counter type="INSTRUCTION" missed="287" covered="732"/><counter type="BRANCH" missed="49" covered="51"/><counter type="LINE" missed="53" covered="123"/><counter type="COMPLEXITY" missed="53" covered="72"/><counter type="METHOD" missed="26" covered="49"/><counter type="CLASS" missed="0" covered="25"/></group><counter type="INSTRUCTION" missed="287" covered="1202"/><counter type="BRANCH" missed="49" covered="51"/><counter type="LINE" missed="53" covered="203"/><counter type="COMPLEXITY" missed="53" covered="94"/><counter type="METHOD" missed="26" covered="71"/><counter type="CLASS" missed="0" covered="26"/></group><counter type="INSTRUCTION" missed="287" covered="1202"/><counter type="BRANCH" missed="49" covered="51"/><counter type="LINE" missed="53" covered="203"/><counter type="COMPLEXITY" missed="53" covered="94"/><counter type="METHOD" missed="26" covered="71"/><counter type="CLASS" missed="0" covered="26"/></report>