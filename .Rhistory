source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
# This next dataset involves readability. This is a metric with
# continues values, therefore we can split the data into
# readable vs unreadable by looking at the quartiles
quantile(dataset$readability)
# This yields the following separation
dataUnreadable <- dataset[dataset$readability < -11.624563,]
dataReadable <- dataset[dataset$readability > 1.401324,]
# Balancing
# <=1 and >1 = -1564
# <=1 and >2 = 56 <- this is the best balancing
# <=1 and >2 = 484
datasetCoverage <- dataset[dataset$hasCoverageData=="yes",]
nrow(datasetCoverage)
dataCoverageIneffective <- datasetCoverage[datasetCoverage$noCommitFixes <= 1,]
# Balancing
# <=1 and >1 = -1564
# <=1 and >2 = 56 <- this is the best balancing
# <=1 and >2 = 484
datasetCoverage <- dataset[dataset$hasCoverageData=="yes",]
nrow(datasetCoverage)
dataCoverageIneffective <- datasetCoverage[datasetCoverage$noCommitFixes <= 0,]
dataCoverageEffective <- datasetCoverage[datasetCoverage$noCommitFixes >= 1,]
nrow(dataCoverageIneffective)
nrow(dataCoverageEffective)
nrow(dataCoverageIneffective)-nrow(dataCoverageEffective)
# Initializing the result data frame
results <- data.frame()
print("Testing GP1 for all projects")
results <- rbind(results, testGP1(dataEffective, dataIneffective))
print("Testing GP2a for all projects")
results <- rbind(results, testGP2a(dataEffective, dataIneffective))
print("Testing GP2b for all projects")
results <- rbind(results, testGP2b(dataEffective, dataIneffective))
print("Testing GP3a for all projects")
results <- rbind(results, testGP3a(dataEffective, dataIneffective))
print("Testing GP3b for all projects")
results <- rbind(results, testGP3b(dataEffective, dataIneffective))
print("Testing GP4a for all projects")
results <- rbind(results, testGP4a(dataEffective, dataIneffective))
print("Testing GP4b for all projects")
results <- rbind(results, testGP4b(dataReadable, dataUnreadable))
print("Testing GP5 for all projects")
results <- rbind(results, testGP5(dataCoverageEffective, dataCoverageIneffective))
print("Testing GP6 for all projects")
results <- rbind(results, testGP6(dataEffective, dataIneffective))
print("Testing GP7 for all projects")
results <- rbind(results, testGP7(dataEffective, dataIneffective))
print("Writing to CSV file")
write.csv(results,"files/analysisResults.csv", row.names = TRUE)
print("Done!")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
source("C:/Users/dlucr/GitProjects/testCaseAnalyzer/scripts/statisticAnalysis/fullAnalysis.r")
View(results)
